---
- name: NiFi host setup
  hosts: all
  remote_user: root
  vars:
    no_nifi_rollout:
  roles:
    - role: base_system
    - role: nifi
      nifi_version: 1.11.4
      nifi_node_jvm_memory: 6000m
      nifi_is_secure: True
      nifi_security_keystore: /opt/nifi/nifi-current/conf/keystore.ks
      nifi_security_truststore: /opt/nifi/nifi-current/conf/truststore.ks
    - role: nifi_registry
    - role: logstash
  pre_tasks:
    - name: Ensure /opt/nifi directory
      file:
        path: /opt/nifi
        state: directory
    - name: Get NiFi distribution (tar.gz)
      get_url:
        url: https://archive.apache.org/dist/nifi/1.11.4/nifi-1.11.4-bin.tar.gz
        checksum: sha256:5bb68014f818f74b475bcd774ce8c446fc20368ec3062c5ef86e4af9b2ba9aef
        dest: /opt/nifi/nifi-1.11.4-bin.tar.gz
      when: not no_nifi_rollout
    - name: Unarchive NiFi distribution
      unarchive:
        src: /opt/nifi/nifi-1.11.4-bin.tar.gz
        dest: /opt/nifi
        copy: no
      when: not no_nifi_rollout
  tasks:
  - name: Disable swapping
    sysctl:
      name: vm.swappiness
      value: '0'
      state: present
  - name: Increase the number of TCP socket ports available
    sysctl:
      name: net.ipv4.ip_local_port_range
      value: '10001 65000'
      state: present
  - name: Forward https to NiFi on port 8443
    iptables:
      table: nat
      chain: PREROUTING
      in_interface: eth0
      protocol: tcp
      match: tcp
      destination_port: https
      jump: REDIRECT
      to_ports: '8443'
    become: yes
  - name: Persist iptables
    command: service netfilter-persistent save

  - name: Create LetsEncrypt certificate
    command: certbot certonly --standalone "{{ certbot_args }}" --noninteractive --agree-tos -d "{{ inventory_hostname }}" --email "{{ nifi_administrators[0] }}"
    when: ssl_keystore is not defined
  - name: Copy keystore refresh script
    copy:
      src: files/maybe-remake-keystore.sh
      dest: /usr/local/sbin/
      owner: root
      group: root
      mode: "0744"
    when: ssl_keystore is not defined
  - name: Add crontab entry to remake keystore
    cron:
      name: "Maybe recreate NiFi keystore"
      job: "/usr/local/sbin/maybe-remake-keystore.sh"
      user: root
      minute: "0"
      hour: "2"
    when: ssl_keystore is not defined
  - name: Make sure that keystore exists
    command: "/usr/local/sbin/maybe-remake-keystore.sh"
    when: ssl_keystore is not defined

  - name: Copy keystore
    copy:
      src: "{{ ssl_keystore }}"
      dest: /opt/nifi/nifi-current/conf/keystore.ks
      owner: nifi
      group: nifi
      mode: "0400"
    when: ssl_keystore is defined
  - name: Copy truststore
    copy:
      src: "{{ ssl_truststore }}"
      dest: /opt/nifi/nifi-current/conf/truststore.ks
      owner: nifi
      group: nifi
      mode: "0400"

  - name: Ensure /opt/nifi-registry directory
    file:
      path: /opt/nifi-registry
      state: directory
  - name: Create ~nifireg/.ssh
    file:
      path: /home/nifireg/.ssh
      owner: nifireg
      group: nifireg
      mode: "0700"
      state: directory
  - name: Copy NiFi registry deploy key
    copy:
      src: "{{ nifi_registry_github_deploy_key }}"
      dest: /home/nifireg/.ssh/id_rsa
      owner: nifireg
      group: nifireg
      mode: "0400"
  - name: Clone NiFi flow repository
    git:
      repo: "{{ nifi_registry_github_repository }}"
      dest: /opt/nifi-registry/versioned_flows
      accept_hostkey: yes
      key_file: /home/nifireg/.ssh/id_rsa
    become: yes
    become_user: nifireg
  - name: Update NiFi registry providers file
    template:
      src: templates/nifi-registry-providers.xml.j2
      dest: /opt/nifi-registry/releases/current/conf/providers.xml
  - name: Change ownership of the flow file repository
    file:
      path: /opt/nifi-registry/versioned_flows
      state: directory
      owner: nifireg
      group: nifireg
      recurse: yes

  - name: Set limits for NiFi
    copy:
      src: files/90-nifi.conf
      dest: /etc/security/limits.d/

  - name: Add logback to logstash dependencies to NiFi
    maven_artifact:
      group_id: "{{ item.group_id }}"
      artifact_id: "{{ item.artifact_id }}"
      version: "{{ item.version }}"
      repository_url: "https://repo1.maven.org/maven2"
      dest: /opt/nifi/nifi-current/lib/
      mode: '0444'
    loop:
      - { group_id:    "net.logstash.logback",
          artifact_id: "logstash-logback-encoder",
          version:     "6.4" }
      - { group_id:    "com.fasterxml.jackson.core",
          artifact_id: "jackson-core",
          version:     "2.11.0" }
      - { group_id:    "com.fasterxml.jackson.core",
          artifact_id: "jackson-databind",
          version:     "2.11.0" }
      - { group_id:    "com.fasterxml.jackson.core",
          artifact_id: "jackson-annotations",
          version:     "2.11.0" }
  - name: Copy logback to logstash input configuration
    copy:
      src: files/03-logback-input.conf
      dest: /etc/logstash/conf.d/
      mode: '0444'
  - name: Copy logback configuration for NiFi
    copy:
      src: files/logback.xml
      dest: /opt/nifi/nifi-current/conf/
      mode: '0444'

  - name: Check flow.xml.gz for existence
    stat:
      path: /etc/nifi/flow.xml.gz
    register: flow
  - name: Initialize NiFi users, authentications and flow
    include_tasks: tasks/init-nifi-auth.yml
    when: not flow.stat.exists
